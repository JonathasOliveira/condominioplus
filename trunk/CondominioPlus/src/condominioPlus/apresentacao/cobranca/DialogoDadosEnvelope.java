/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * DialogoDadosEnvelope.java
 *
 * Created on 07/10/2010, 14:33:06
 */
package condominioPlus.apresentacao.cobranca;

import java.awt.event.ActionEvent;
import javax.swing.event.ChangeEvent;
import logicpoint.apresentacao.ControladorEventosGenerico;
import logicpoint.util.DataUtil;
import org.joda.time.DateTime;

/**
 *
 * @author Administrador
 */
public class DialogoDadosEnvelope extends javax.swing.JDialog {

    private DateTime dataVencimento;
    private boolean imprimirRemetente;
    private boolean cancelar;
    private boolean imprimirParaInquilino;
    private boolean imprimirParaProprietario;

    /** Creates new form DialogoDadosEnvelope */
    public DialogoDadosEnvelope(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        new ControladorEventos();
        this.setLocationRelativeTo(null);
        txtDataVencimento.setValue(DataUtil.getDate(DataUtil.hoje()));
        cancelar = true;
    }

    public DateTime getDataVencimento() {
        return dataVencimento;
    }

    public boolean getImprimirRemetente() {
        return imprimirRemetente;
    }

    public boolean getImprimirParaInquilino() {
        return imprimirParaInquilino;
    }
    
    public boolean getImprimirParaProprietario(){
        return imprimirParaProprietario;
    }

    public boolean getCancelar() {
        return cancelar;
    }

    private void salvarDados() {
        if (chkExibirDataVencimento.isSelected()) {
            dataVencimento = DataUtil.getDateTime(txtDataVencimento.getValue());
        } else {
            dataVencimento = null;
        }

        imprimirRemetente = chkImprimirRemetente.isSelected();
        
        if (radioProprietario.isSelected()){
            imprimirParaProprietario = true;
            imprimirParaInquilino = false;
        } else if(radioInquilino.isSelected()){
            imprimirParaProprietario = false;
            imprimirParaInquilino = true;
        } else if (radioProprietarioInquilino.isSelected()){
            imprimirParaProprietario = true;
            imprimirParaInquilino = true;
        }
        
        cancelar = false;
        sair();
    }

    private void sair() {
        dispose();
    }

    private class ControladorEventos extends ControladorEventosGenerico {

        @Override
        public void configurar() {
            btnOk.addActionListener(this);
            btnCancelar.addActionListener(this);
            chkExibirDataVencimento.addChangeListener(this);
        }

        @Override
        public void actionPerformed(ActionEvent e) {
            source = e.getSource();
            if (source == btnOk) {
                salvarDados();
            } else if (source == btnCancelar) {
                sair();
            }
            source = null;
        }

        @Override
        public void stateChanged(ChangeEvent e) {
            if (e.getSource() == chkExibirDataVencimento) {
                if (chkExibirDataVencimento.isSelected()) {
                    txtDataVencimento.setEnabled(true);
                } else {
                    txtDataVencimento.setEnabled(false);
                }
            }
        }
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        btnOk = new javax.swing.JButton();
        btnCancelar = new javax.swing.JButton();
        txtDataVencimento = new net.sf.nachocalendar.components.DateField();
        chkExibirDataVencimento = new javax.swing.JCheckBox();
        chkImprimirRemetente = new javax.swing.JCheckBox();
        radioProprietario = new javax.swing.JRadioButton();
        radioInquilino = new javax.swing.JRadioButton();
        radioProprietarioInquilino = new javax.swing.JRadioButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Impressão de Envelopes");
        setAlwaysOnTop(true);

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        btnOk.setText("OK");

        btnCancelar.setText("Cancelar");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(29, Short.MAX_VALUE)
                .addComponent(btnOk)
                .addGap(18, 18, 18)
                .addComponent(btnCancelar)
                .addGap(26, 26, 26))
        );

        jPanel2Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {btnCancelar, btnOk});

        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnOk)
                    .addComponent(btnCancelar))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        txtDataVencimento.setEnabled(false);

        chkExibirDataVencimento.setText("Exibir data de vencimento?");

        chkImprimirRemetente.setText("Imprimir remetente?");

        buttonGroup1.add(radioProprietario);
        radioProprietario.setSelected(true);
        radioProprietario.setText("Somente Proprietário");

        buttonGroup1.add(radioInquilino);
        radioInquilino.setText("Somente Inquilino");

        buttonGroup1.add(radioProprietarioInquilino);
        radioProprietarioInquilino.setText("Proprietário e Inquilino");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(chkExibirDataVencimento)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtDataVencimento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(chkImprimirRemetente)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(2, 2, 2)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(radioInquilino)
                            .addComponent(radioProprietario)
                            .addComponent(radioProprietarioInquilino)))
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(chkImprimirRemetente)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(chkExibirDataVencimento)
                    .addComponent(txtDataVencimento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(radioProprietario)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(radioInquilino, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(radioProprietarioInquilino)
                .addGap(18, 18, 18)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancelar;
    private javax.swing.JButton btnOk;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JCheckBox chkExibirDataVencimento;
    private javax.swing.JCheckBox chkImprimirRemetente;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JRadioButton radioInquilino;
    private javax.swing.JRadioButton radioProprietario;
    private javax.swing.JRadioButton radioProprietarioInquilino;
    private net.sf.nachocalendar.components.DateField txtDataVencimento;
    // End of variables declaration//GEN-END:variables
}
